#include <iostream>
#include <algorithm>
#include <cstdlib>
#include <fstream>
using namespace std;


void main() {
	int pole[100][100], i, j;
	for (i = 0; i < 100; i++)
		for (j = 0; j < 100; j++)
			pole[i][j] = 0;
	for (i = 0; i <50; i++)
		for (j = 0; j < 50; j++) {
			if (i + j <= 20)
				pole[i][j] = 0;
			else if (i + j - 1 <= 20 || i / 2 + i % 2 + j <= 20 || i + j / 2 + j % 2 <= 20)
				pole[i][j] = 1;
			else if (pole[i - 1][j] > 0 && pole[i][j - 1] > 0 && pole[i / 2 + i % 2][j] > 0 && pole[i][j / 2 + j % 2] > 0)
				pole[i][j] = -max(max(pole[i - 1][j], pole[i][j - 1]), max(pole[i / 2 + i % 2][j], pole[i][j / 2 + j % 2]));
			else {
				pole[i][j] = -100;
				if (pole[i - 1][j] < 0 && pole[i - 1][j] > pole[i][j]) pole[i][j] = pole[i - 1][j];
				if (pole[i / 2 + i % 2][j] < 0 && pole[i / 2 + i % 2][j] > pole[i][j]) pole[i][j] = pole[i / 2 + i % 2][j];
				if (pole[i][j - 1] < 0 && pole[i][j - 1] > pole[i][j]) pole[i][j] = pole[i][j - 1];
				if (pole[i][j / 2 + j % 2] < 0 && pole[i][j / 2 + j % 2] > pole[i][j]) pole[i][j] = pole[i][j / 2 + j % 2];
				pole[i][j] = -pole[i][j] + 1;
			}
		}
	cout << "   ";
	for (i = 0; i < 50; i++)
		printf("%3d", i);
	cout << endl;
	for (i = 0; i < 50; i++) {
		printf("%2d:", i);
		for (j = 0; j < 50; j++) {
			printf("%3d", pole[i][j]);
		}
		cout << endl;
	}
}



     0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34
 0:  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  1  1  1  1  1  1  1  1  1  1  1  1  1  1
 1:  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1
 2:  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1
 3:  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1
 4:  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1 -1  2
 5:  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1 -1  2  2 -2
 6:  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  1  1  1  1  1  1  1  1  1  1  1  1  1  1 -1  2  2 -2  3  3
 7:  0  0  0  0  0  0  0  0  0  0  0  0  0  0  1  1  1  1  1  1  1  1  1  1  1  1  1 -1  2  2 -2  3  3  2 -3
 8:  0  0  0  0  0  0  0  0  0  0  0  0  0  1  1  1  1  1  1  1  1  1  1  1  1 -1  2  2 -2  3  3 -3  4  2  4
 9:  0  0  0  0  0  0  0  0  0  0  0  0  1  1  1  1  1  1  1  1  1  1  1 -1  2  2 -2  3  3 -3  4  2 -4  5  3
10:  0  0  0  0  0  0  0  0  0  0  0  1  1  1  1  1  1  1  1  1  1 -1  2  2 -2  3  3 -3  4  4 -4  2  5 -5  3
11:  0  0  0  0  0  0  0  0  0  0  1  1  1  1  1  1  1  1  1 -1  2  2 -2  3  3 -3  4  4 -4  2  5 -5  3  6 -6
12:  0  0  0  0  0  0  0  0  0  1  1  1  1  1  1  1  1 -1  2  2 -2  3  3 -3  4  4 -4  5  5  2 -5  6  3  2  2
13:  0  0  0  0  0  0  0  0  1  1  1  1  1  1  1 -1  2  2 -2  3  3 -3  4  4 -4  5  5  2 -5  2  2 -6  7 -7  4
14:  0  0  0  0  0  0  0  1  1  1  1  1  1  1 -1  2 -2  3  3 -3  4  4 -4  5  5 -5  6  2  2 -2  3  3  3  8  4
15:  0  0  0  0  0  0  1  1  1  1  1  1  1 -1  2 -2  3 -3  4  4 -4  5  5 -5  6  2  2 -2  3  3  3  4 -4  4  4
16:  0  0  0  0  0  1  1  1  1  1  1  1  1  2 -2  3 -3  4 -4  5  5 -5  6  6 -6  2 -2  3  3 -3  4  4  4 -4  5
17:  0  0  0  0  1  1  1  1  1  1  1  1 -1  2  3 -3  4 -4  5 -5  6  6 -6  2  2 -2  3 -3  4  4  4 -4  5  5  5
18:  0  0  0  1  1  1  1  1  1  1  1  1  2 -2  3  4 -4  5 -5  6 -6  7  7  2 -2  3  3  4 -4  4 -4  5  5 -5  6
19:  0  0  1  1  1  1  1  1  1  1  1 -1  2  3 -3  4  5 -5  6 -6  7  2  2 -2  3 -3  4  4  4 -4  5 -5  6  6  6
20:  0  1  1  1  1  1  1  1  1  1  1  2 -2  3  4 -4  5  6 -6  7 -7  2 -2  3  3  4 -4  4 -4  5  5  6 -6  6 -6
21:  1  1  1  1  1  1  1  1  1  1 -1  2  3 -3  4  5 -5  6  7  2  2 -2  3 -3  4  4  4 -4  5 -5  6  6  6 -6  7
22:  1  1  1  1  1  1  1  1  1  1  2 -2  3  4 -4  5  6 -6  7  2 -2  3  3  4 -4  4 -4  5  5  6 -6  6 -6  7  7
23:  1  1  1  1  1  1  1  1  1 -1  2  3 -3  4  5 -5  6  2  2 -2  3 -3  4  4  4 -4  5 -5  6  6  6 -6  7 -7  8
24:  1  1  1  1  1  1  1  1  1  2 -2  3  4 -4  5  6 -6  2 -2  3  3  4 -4  4 -4  5  5  6 -6  7  6  7  7  8 -8
25:  1  1  1  1  1  1  1  1 -1  2  3 -3  4  5 -5  2  2 -2  3 -3  4  4  4 -4  5 -5  6  6  6 -7  8  7 -7  3  3
26:  1  1  1  1  1  1  1  1  2 -2  3  4 -4  5  6  2 -2  3  3  4 -4  4 -4  5  5  6 -6  7  6  8 -8  3  3  8 -8
27:  1  1  1  1  1  1  1 -1  2  3 -3  4  5  2  2 -2  3 -3  4  4  4 -4  5 -5  6  6  7 -7  8  3  3 -3  4  4  4
28:  1  1  1  1  1  1  1  2 -2  3  4 -4  5 -5  2  3  3  4 -4  4 -4  5  5  6 -6  6  6  8 -8  3 -3  4 -4  5 -5
29:  1  1  1  1  1  1 -1  2  3 -3  4  2  2  2 -2  3 -3  4  4 -4  5 -5  6  6  7 -7  8  3  3 -3  4  4  4 -5  6
30:  1  1  1  1  1  1  2 -2  3  4 -4  5 -5  2  3  3  4  4 -4  5  5  6 -6  6  6  8 -8  3 -3  4 -4  5  5  6 -6
31:  1  1  1  1  1 -1  2  3 -3  2  2 -5  6 -6  3  4  4 -4  5 -5  6  6  6 -6  7  7  3 -3  4  4  5 -5  6  5  5
32:  1  1  1  1  1  2 -2  3  4 -4  5  3  3  7  3 -4  4  5  5  6 -6  6 -6  7  7 -7  3  4 -4  4  5  6 -6  5 -5
33:  1  1  1  1 -1  2  3  2  2  5 -5  6  2 -7  8  4 -4  5 -5  6  6 -6  7 -7  8  3  8  4  5 -5  6  5  5 -5  6
34:  1  1  1  1  2 -2  3 -3  4  3  3 -6  2  4  4  4  5  5  6  6 -6  7  7  8 -8  3 -8  4 -5  6 -6  5 -5  6 -6



ответ:
1) 21
2) 22 42
3) 24
